name: Symfony

on:
  workflow_call:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  symfony-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: [ 8.2, 8.3, 8.4 ]
      fail-fast: false
    steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
    - name: Setup Node.js
      uses: actions/setup-node@v5
    - name: Checkout
      uses: actions/checkout@v5
    - name: Set Composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
    - name: Cache Composer packages
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
        path: ${{ steps.composer-cache.outputs.dir }}
        restore-keys: ${{ runner.os }}-composer-
    - name: Set npm cache directory
      id: npm-cache
      run: echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT
    - name: Cache npm dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
        path: ${{ steps.npm-cache.outputs.dir }}
        restore-keys: ${{ runner.os }}-npm-
    - name: Install Dependencies
      run: |
        npm ci
        composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Build static assets
      run: npm run build
    - name: Create database and load fixtures
      run: |
        mkdir -p var
        touch var/data.db
        php bin/console --env=test doctrine:schema:create --no-interaction
        php bin/console --env=test doctrine:fixtures:load --no-interaction
    - name: Run PHP Code Sniffer
      run: vendor/bin/phpcs -s
    - name: Run PHPStan
      run: vendor/bin/phpstan analyse --error-format=github
    - name: Run PHP Mess Detector
      run: vendor/bin/phpmd ./src github phpmd.xml.dist
    - name: Execute tests with PHPUnit
      run: vendor/bin/phpunit
